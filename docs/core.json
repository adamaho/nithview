{
  "timestamp": "2020-02-08T20:59:40",
  "compiler": {
    "name": "@stencil/core",
    "version": "1.8.6",
    "typescriptVersion": "3.7.5"
  },
  "components": [
    {
      "filePath": "src/components/button/button.tsx",
      "encapsulation": "shadow",
      "tag": "nv-button",
      "readme": "# nv-button\n\n\n",
      "docs": "",
      "docsTags": [
        {
          "text": "- Content that is placed in the button. Must be a `string`.",
          "name": "slot"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "If true, the button will be disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "mutable": false,
          "attr": "loading",
          "reflectToAttr": false,
          "docs": "If true, the button will be in a loading state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"default\" | \"primary\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of the button",
          "docsTags": [],
          "default": "'default'",
          "values": [
            {
              "value": "default",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "styles": [
        {
          "name": "--nv-button-border-radius",
          "annotation": "prop",
          "docs": "Border Radius of the button"
        },
        {
          "name": "--nv-button-default-background",
          "annotation": "prop",
          "docs": "Background of the default button"
        },
        {
          "name": "--nv-button-default-color",
          "annotation": "prop",
          "docs": "Color of the default button"
        },
        {
          "name": "--nv-button-font-size",
          "annotation": "prop",
          "docs": "Font size of text in the button"
        },
        {
          "name": "--nv-button-height",
          "annotation": "prop",
          "docs": "Height of the button"
        },
        {
          "name": "--nv-button-padding",
          "annotation": "prop",
          "docs": "Padding of the button"
        },
        {
          "name": "--nv-button-primary-background",
          "annotation": "prop",
          "docs": "Background of the primary button"
        },
        {
          "name": "--nv-button-primary-color",
          "annotation": "prop",
          "docs": "Color of the primary button"
        }
      ],
      "slots": [
        {
          "name": "",
          "docs": "Content that is placed in the button. Must be a `string`."
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/layout/layout.tsx",
      "encapsulation": "shadow",
      "tag": "nv-layout",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "styles": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/layout-content/layout-content.tsx",
      "encapsulation": "shadow",
      "tag": "nv-layout-content",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "styles": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/layout-footer/layout-footer.tsx",
      "encapsulation": "shadow",
      "tag": "nv-layout-footer",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "styles": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/layout-header/layout-header.tsx",
      "encapsulation": "shadow",
      "tag": "nv-layout-header",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "styles": [],
      "slots": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/panel/panel.tsx",
      "encapsulation": "shadow",
      "tag": "nv-panel",
      "readme": "# nv-panel\n\n\n",
      "docs": "",
      "docsTags": [
        {
          "text": "- Content that is placed in the panel",
          "name": "slot"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "clickable",
          "type": "boolean",
          "mutable": false,
          "attr": "clickable",
          "reflectToAttr": false,
          "docs": "If true, active, hover, focus styles will be applied",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "styles": [
        {
          "name": "--nv-panel-background",
          "annotation": "prop",
          "docs": "Background of the panel"
        },
        {
          "name": "--nv-panel-border-radius",
          "annotation": "prop",
          "docs": "Border radius of the panel"
        },
        {
          "name": "--nv-panel-padding",
          "annotation": "prop",
          "docs": "Padding in the panel"
        }
      ],
      "slots": [
        {
          "name": "",
          "docs": "Content that is placed in the panel"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/tab-item/tab-item.tsx",
      "encapsulation": "shadow",
      "tag": "nv-tab-item",
      "readme": "# nv-tab-item\n\n\n",
      "docs": "",
      "docsTags": [
        {
          "text": "- Content that is placed in the in the tab item. Must be a `string`.",
          "name": "slot"
        },
        {
          "text": "nv-tab-icon - Icon to show to the left of the tab item.",
          "name": "slot"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "tab",
          "type": "string",
          "mutable": false,
          "attr": "tab",
          "reflectToAttr": false,
          "docs": "Name of the tab. Used to determine which tab is currently selected.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "tabClick",
          "detail": "SelectedTab",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event that is emitted when the tab item is clicked",
          "docsTags": [
            {
              "name": "interal"
            }
          ]
        }
      ],
      "styles": [
        {
          "name": "--nv-tab-item-border-radius",
          "annotation": "prop",
          "docs": "Border radius of the tab-item"
        },
        {
          "name": "--nv-tab-item-height",
          "annotation": "prop",
          "docs": "Background of the tab-item"
        },
        {
          "name": "--nv-tab-item-margin",
          "annotation": "prop",
          "docs": "Margin of the tab-item"
        },
        {
          "name": "--nv-tab-item-padding",
          "annotation": "prop",
          "docs": "Padding of the tab-item"
        }
      ],
      "slots": [
        {
          "name": "",
          "docs": "Content that is placed in the in the tab item. Must be a `string`."
        },
        {
          "name": "nv-tab-icon",
          "docs": "Icon to show to the left of the tab item."
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/tabs/tabs.tsx",
      "encapsulation": "shadow",
      "tag": "nv-tabs",
      "readme": "# nv-tabs\n\n\n",
      "docs": "",
      "docsTags": [
        {
          "text": "- Collection of `nv-tab-item`'s.",
          "name": "slot"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "defaultSelectedTab",
          "type": "string",
          "mutable": false,
          "attr": "default-selected-tab",
          "reflectToAttr": false,
          "docs": "The default selected tab",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "tabChange",
          "detail": "number | string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event that is emitted when a new tab item is selected",
          "docsTags": []
        }
      ],
      "styles": [],
      "slots": [
        {
          "name": "",
          "docs": "Collection of `nv-tab-item`'s."
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ]
}
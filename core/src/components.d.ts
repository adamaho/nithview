/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  ButtonType,
} from './components/button/button';

export namespace Components {
  interface NvBody {}
  interface NvButton {
    /**
    * If true, the button will be disabled
    */
    'disabled': boolean;
    /**
    * If true, the button will be in a loading state
    */
    'loading': boolean;
    /**
    * The type of the button
    */
    'type': ButtonType;
  }
  interface NvInput {
    /**
    * Placeholder for the input
    */
    'placeholder': string;
    /**
    * Value of the input
    */
    'value': string;
  }
  interface NvLayout {}
  interface NvLayoutContent {}
  interface NvLayoutFooter {}
  interface NvLayoutHeader {}
  interface NvSubtitle {}
  interface NvTitle {}
}

declare global {


  interface HTMLNvBodyElement extends Components.NvBody, HTMLStencilElement {}
  var HTMLNvBodyElement: {
    prototype: HTMLNvBodyElement;
    new (): HTMLNvBodyElement;
  };

  interface HTMLNvButtonElement extends Components.NvButton, HTMLStencilElement {}
  var HTMLNvButtonElement: {
    prototype: HTMLNvButtonElement;
    new (): HTMLNvButtonElement;
  };

  interface HTMLNvInputElement extends Components.NvInput, HTMLStencilElement {}
  var HTMLNvInputElement: {
    prototype: HTMLNvInputElement;
    new (): HTMLNvInputElement;
  };

  interface HTMLNvLayoutElement extends Components.NvLayout, HTMLStencilElement {}
  var HTMLNvLayoutElement: {
    prototype: HTMLNvLayoutElement;
    new (): HTMLNvLayoutElement;
  };

  interface HTMLNvLayoutContentElement extends Components.NvLayoutContent, HTMLStencilElement {}
  var HTMLNvLayoutContentElement: {
    prototype: HTMLNvLayoutContentElement;
    new (): HTMLNvLayoutContentElement;
  };

  interface HTMLNvLayoutFooterElement extends Components.NvLayoutFooter, HTMLStencilElement {}
  var HTMLNvLayoutFooterElement: {
    prototype: HTMLNvLayoutFooterElement;
    new (): HTMLNvLayoutFooterElement;
  };

  interface HTMLNvLayoutHeaderElement extends Components.NvLayoutHeader, HTMLStencilElement {}
  var HTMLNvLayoutHeaderElement: {
    prototype: HTMLNvLayoutHeaderElement;
    new (): HTMLNvLayoutHeaderElement;
  };

  interface HTMLNvSubtitleElement extends Components.NvSubtitle, HTMLStencilElement {}
  var HTMLNvSubtitleElement: {
    prototype: HTMLNvSubtitleElement;
    new (): HTMLNvSubtitleElement;
  };

  interface HTMLNvTitleElement extends Components.NvTitle, HTMLStencilElement {}
  var HTMLNvTitleElement: {
    prototype: HTMLNvTitleElement;
    new (): HTMLNvTitleElement;
  };
  interface HTMLElementTagNameMap {
    'nv-body': HTMLNvBodyElement;
    'nv-button': HTMLNvButtonElement;
    'nv-input': HTMLNvInputElement;
    'nv-layout': HTMLNvLayoutElement;
    'nv-layout-content': HTMLNvLayoutContentElement;
    'nv-layout-footer': HTMLNvLayoutFooterElement;
    'nv-layout-header': HTMLNvLayoutHeaderElement;
    'nv-subtitle': HTMLNvSubtitleElement;
    'nv-title': HTMLNvTitleElement;
  }
}

declare namespace LocalJSX {
  interface NvBody {}
  interface NvButton {
    /**
    * If true, the button will be disabled
    */
    'disabled'?: boolean;
    /**
    * If true, the button will be in a loading state
    */
    'loading'?: boolean;
    /**
    * Event to handle button click
    */
    'onNvClick'?: (event: CustomEvent<any>) => void;
    /**
    * The type of the button
    */
    'type'?: ButtonType;
  }
  interface NvInput {
    /**
    * Event to handle change for input
    */
    'onNvInput'?: (event: CustomEvent<any>) => void;
    /**
    * Placeholder for the input
    */
    'placeholder'?: string;
    /**
    * Value of the input
    */
    'value'?: string;
  }
  interface NvLayout {}
  interface NvLayoutContent {}
  interface NvLayoutFooter {}
  interface NvLayoutHeader {}
  interface NvSubtitle {}
  interface NvTitle {}

  interface IntrinsicElements {
    'nv-body': NvBody;
    'nv-button': NvButton;
    'nv-input': NvInput;
    'nv-layout': NvLayout;
    'nv-layout-content': NvLayoutContent;
    'nv-layout-footer': NvLayoutFooter;
    'nv-layout-header': NvLayoutHeader;
    'nv-subtitle': NvSubtitle;
    'nv-title': NvTitle;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'nv-body': LocalJSX.NvBody & JSXBase.HTMLAttributes<HTMLNvBodyElement>;
      'nv-button': LocalJSX.NvButton & JSXBase.HTMLAttributes<HTMLNvButtonElement>;
      'nv-input': LocalJSX.NvInput & JSXBase.HTMLAttributes<HTMLNvInputElement>;
      'nv-layout': LocalJSX.NvLayout & JSXBase.HTMLAttributes<HTMLNvLayoutElement>;
      'nv-layout-content': LocalJSX.NvLayoutContent & JSXBase.HTMLAttributes<HTMLNvLayoutContentElement>;
      'nv-layout-footer': LocalJSX.NvLayoutFooter & JSXBase.HTMLAttributes<HTMLNvLayoutFooterElement>;
      'nv-layout-header': LocalJSX.NvLayoutHeader & JSXBase.HTMLAttributes<HTMLNvLayoutHeaderElement>;
      'nv-subtitle': LocalJSX.NvSubtitle & JSXBase.HTMLAttributes<HTMLNvSubtitleElement>;
      'nv-title': LocalJSX.NvTitle & JSXBase.HTMLAttributes<HTMLNvTitleElement>;
    }
  }
}


